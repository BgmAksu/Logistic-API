"""add core logistics models

Revision ID: 5d47f9f41f3f
Revises: 56a099ce5a9b
Create Date: 2025-09-21 18:10:00.878440

"""

from typing import Union
from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "5d47f9f41f3f"
down_revision: str | Sequence[str] | None = "56a099ce5a9b"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "depots",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("address_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "shipments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("reference", sa.String(length=64), nullable=False),
        sa.Column("service_level", sa.String(length=20), nullable=False),
        sa.Column(
            "status",
            sa.Enum("CREATED", "IN_TRANSIT", "DELIVERED", name="shipment_status"),
            nullable=False,
        ),
        sa.Column("sender_address_id", sa.Integer(), nullable=False),
        sa.Column("recipient_address_id", sa.Integer(), nullable=False),
        sa.Column("planned_delivery_date", sa.Date(), nullable=True),
        sa.Column("delivered_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["recipient_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sender_address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_shipments_reference"), "shipments", ["reference"], unique=False)
    op.create_index(op.f("ix_shipments_status"), "shipments", ["status"], unique=False)
    op.create_table(
        "drivers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=True),
        sa.Column("phone", sa.String(length=30), nullable=True),
        sa.Column("depot_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["depot_id"],
            ["depots.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "parcels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("shipment_id", sa.Integer(), nullable=False),
        sa.Column("barcode", sa.String(length=64), nullable=False),
        sa.Column("weight_kg", sa.Double(), nullable=True),
        sa.Column("volume_dm3", sa.Double(), nullable=True),
        sa.ForeignKeyConstraint(
            ["shipment_id"],
            ["shipments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_parcels_barcode"), "parcels", ["barcode"], unique=False)
    op.create_index(
        "ix_parcels_shipment_barcode", "parcels", ["shipment_id", "barcode"], unique=True
    )
    op.create_table(
        "vehicles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("plate", sa.String(length=20), nullable=False),
        sa.Column("capacity_kg", sa.Integer(), nullable=True),
        sa.Column("capacity_dm3", sa.Integer(), nullable=True),
        sa.Column("depot_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["depot_id"],
            ["depots.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("plate"),
    )
    op.create_table(
        "routes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("depot_id", sa.Integer(), nullable=False),
        sa.Column("vehicle_id", sa.Integer(), nullable=True),
        sa.Column("driver_id", sa.Integer(), nullable=True),
        sa.Column("route_date", sa.Date(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["depot_id"],
            ["depots.id"],
        ),
        sa.ForeignKeyConstraint(
            ["driver_id"],
            ["drivers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vehicle_id"],
            ["vehicles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "tracking_events",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("parcel_id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=32), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("event_time", sa.DateTime(), nullable=False),
        sa.Column("lat", sa.Double(), nullable=True),
        sa.Column("lon", sa.Double(), nullable=True),
        sa.Column("location_name", sa.String(length=100), nullable=True),
        sa.ForeignKeyConstraint(
            ["parcel_id"],
            ["parcels.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tracking_events_code"), "tracking_events", ["code"], unique=False)
    op.create_table(
        "stops",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.Integer(), nullable=False),
        sa.Column("sequence", sa.Integer(), nullable=False),
        sa.Column("stop_type", sa.Enum("PICKUP", "DELIVERY", name="stop_type"), nullable=False),
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("planned_time", sa.DateTime(), nullable=True),
        sa.Column("actual_time", sa.DateTime(), nullable=True),
        sa.Column("shipment_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["route_id"],
            ["routes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["shipment_id"],
            ["shipments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_stops_route_seq", "stops", ["route_id", "sequence"], unique=True)
    op.create_index(op.f("ix_stops_sequence"), "stops", ["sequence"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_stops_sequence"), table_name="stops")
    op.drop_index("ix_stops_route_seq", table_name="stops")
    op.drop_table("stops")
    op.drop_index(op.f("ix_tracking_events_code"), table_name="tracking_events")
    op.drop_table("tracking_events")
    op.drop_table("routes")
    op.drop_table("vehicles")
    op.drop_index("ix_parcels_shipment_barcode", table_name="parcels")
    op.drop_index(op.f("ix_parcels_barcode"), table_name="parcels")
    op.drop_table("parcels")
    op.drop_table("drivers")
    op.drop_index(op.f("ix_shipments_status"), table_name="shipments")
    op.drop_index(op.f("ix_shipments_reference"), table_name="shipments")
    op.drop_table("shipments")
    op.drop_table("depots")
    # ### end Alembic commands ###
